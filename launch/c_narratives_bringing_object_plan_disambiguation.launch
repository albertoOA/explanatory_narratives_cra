<?xml version="1.0"?>
<launch>
	<arg name="semantic_map_namespace"	 	default="map_bringing_object" />

	<arg name="domain_path"		default="$(find know_cra)/pddl/domain/apartment_domain.pddl" />
	<arg name="problem_path"	default="$(find know_cra)/pddl/problem/apartment_problem.pddl" />
	<arg name="narrator_name"	default="" />
	<arg name="print_actions"	default="false" />
	<arg name="evaluation"	 	default="false" />


	<!-- Include rosplan -->
	<include file="$(find know_cra)/launch/rosplan_full.launch">
		<arg name="domain_path"		 		value="$(arg domain_path)" />
		<arg name="problem_path" 			value="$(arg problem_path)" />
		<arg name="planning_language" 		value="PDDL" />
		<arg name="planner_topic" 			value="planner_output" />
		<arg name="data_path" 				value="/tmp/" />
		<arg name="generated_problem_path"	value="/tmp/gen_problem.pddl" />
		<arg name="dispatcher" 				value="simple" /> <!-- Check to add the parser when needed -->
		<!-- (in next lines) -n is to optimize the problem during the timeout - instead of just getting the first found plan - it might be the case that no optimal or better plan is found during the timeout -->
		<arg name="planner_command"      	value="timeout 10 $(find rosplan_planning_system)/common/bin/popf -n DOMAIN PROBLEM" if="$(eval evaluation == false)" /> 
		<arg name="planner_command"      	value="timeout 120 $(find rosplan_planning_system)/common/bin/popf -n DOMAIN PROBLEM" if="$(eval evaluation == true)"/>
		<arg name="planner_interface"    	value="popf_planner_interface" />
	</include>

	<!-- Include node for acxon test for plan disambiguation -->
	<node name="acxon_test_node" pkg="explanatory_narratives_cra" type="acxon_test_plan_and_object_disambiguation.py" output="screen">
		<param name="semantic_map_namespace" value="$(arg semantic_map_namespace)" />   
    </node>

</launch>
